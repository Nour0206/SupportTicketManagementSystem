{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport ticketService from './ticketService';\nconst initialState = {\n  tickets: [],\n  ticket: {},\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Create new Ticket\nexport const createTicket = createAsyncThunk('tickets/create', async (ticketData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.createTicket(ticketData, token);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get all Tickets\nexport const getTickets = createAsyncThunk('tickets/getAll', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.getTickets(token);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get Tickets for the logged-in user\nexport const getUserTickets = createAsyncThunk('tickets/getUserTickets', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    const userId = thunkAPI.getState().auth.user.userId; // Get userId from the state\n    return await ticketService.getUserTickets(token, userId);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get a single Ticket\nexport const getTicket = createAsyncThunk('tickets/:ticketId', async (ticketId, thunkAPI) => {\n  con;\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.getTicket(ticketId, token);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Close Ticket\nexport const closeTicket = createAsyncThunk('tickets/close', async (ticketId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.closeTicket(ticketId, token);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const ticketSlice = createSlice({\n  name: 'ticket',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(createTicket.pending, state => {\n      state.isLoading = true;\n    }).addCase(createTicket.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(createTicket.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getTickets.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTickets.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.tickets = action.payload;\n    }).addCase(getTickets.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getUserTickets.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUserTickets.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.tickets = action.payload;\n    }).addCase(getUserTickets.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getTicket.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTicket.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.ticket = action.payload;\n    }).addCase(getTicket.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(closeTicket.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.tickets = state.tickets.map(ticket => ticket._id === action.payload._id ? {\n        ...ticket,\n        status: 'closed'\n      } : ticket);\n    });\n  }\n});\nexport const {\n  reset\n} = ticketSlice.actions;\nexport default ticketSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ticketService","initialState","tickets","ticket","isError","isSuccess","isLoading","message","createTicket","ticketData","thunkAPI","token","getState","auth","user","err","response","data","toString","rejectWithValue","getTickets","_","getUserTickets","userId","getTicket","ticketId","con","closeTicket","ticketSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","rejected","action","payload","map","_id","status","actions","reducer"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/features/tickets/ticketSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport ticketService from './ticketService'\n\nconst initialState = {\n  tickets: [],\n  ticket: {},\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new Ticket\nexport const createTicket = createAsyncThunk(\n  'tickets/create',\n  async (ticketData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await ticketService.createTicket(ticketData, token)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get all Tickets\nexport const getTickets = createAsyncThunk(\n  'tickets/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await ticketService.getTickets(token)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get Tickets for the logged-in user\nexport const getUserTickets = createAsyncThunk(\n  'tickets/getUserTickets',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      const userId = thunkAPI.getState().auth.user.userId // Get userId from the state\n      return await ticketService.getUserTickets(token, userId)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get a single Ticket\nexport const getTicket = createAsyncThunk(\n  'tickets/:ticketId',\n  async (ticketId, thunkAPI) => {\n    con\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await ticketService.getTicket(ticketId, token)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Close Ticket\nexport const closeTicket = createAsyncThunk(\n  'tickets/close',\n  async (ticketId, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await ticketService.closeTicket(ticketId, token)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const ticketSlice = createSlice({\n  name: 'ticket',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createTicket.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createTicket.fulfilled, (state) => {\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(createTicket.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getTickets.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getTickets.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.tickets = action.payload\n      })\n      .addCase(getTickets.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getUserTickets.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getUserTickets.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.tickets = action.payload\n      })\n      .addCase(getUserTickets.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getTicket.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getTicket.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.ticket = action.payload\n      })\n      .addCase(getTicket.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(closeTicket.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.tickets = state.tickets.map((ticket) =>\n          ticket._id === action.payload._id\n            ? { ...ticket, status: 'closed' }\n            : ticket\n        )\n      })\n  },\n})\n\nexport const { reset } = ticketSlice.actions\nexport default ticketSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}