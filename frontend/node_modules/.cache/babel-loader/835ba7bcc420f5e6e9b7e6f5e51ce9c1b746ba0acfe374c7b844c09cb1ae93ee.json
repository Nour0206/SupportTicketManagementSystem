{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\components\\\\TicketItem.jsx\";\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStatusText = status => {\n  switch (status) {\n    case 0:\n      return 'Open';\n    case 1:\n      return 'In Progress';\n    case 2:\n      return 'Closed';\n    default:\n      return 'Unknown';\n  }\n};\nconst navigate = useNavigate();\nconst handleChangeStatus = ticketId => {\n  navigate(`/change-status/${ticketId}`);\n};\nfunction TicketItem({\n  ticket\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: new Date(ticket.createdAt).toLocaleString('en-US')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ticket.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status status-${ticket.status}`,\n      children: getStatusText(ticket.status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), ticket.status === 0 && !ticket.assignedTo ? /*#__PURE__*/_jsxDEV(Link, {\n      to: `/assign-ticket/${ticket._id}`,\n      className: \"btn btn btn-sm\",\n      children: \"Assign Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ticket.assignedTo ? ticket.assignedTo.name : 'Unassigned'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleChangeStatus(ticket._id),\n      children: \"Change Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/ticket/${ticket._id}`,\n      className: \"btn btn-reverse btn-sm\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = TicketItem;\nexport default TicketItem;\nvar _c;\n$RefreshReg$(_c, \"TicketItem\");","map":{"version":3,"names":["Link","useNavigate","jsxDEV","_jsxDEV","getStatusText","status","navigate","handleChangeStatus","ticketId","TicketItem","ticket","className","children","Date","createdAt","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","name","assignedTo","to","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/components/TicketItem.jsx"],"sourcesContent":["import { Link} from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nconst getStatusText = (status) => {\n  switch (status) {\n    case 0:\n      return 'Open'\n    case 1:\n      return 'In Progress'\n    case 2:\n      return 'Closed'\n    default:\n      return 'Unknown'\n  }\n}\n\nconst navigate = useNavigate();\nconst handleChangeStatus = (ticketId) => {\n  navigate(`/change-status/${ticketId}`);\n};\nfunction TicketItem({ ticket }) {  \n\n  return (\n    <div className='ticket'>\n      <div>{new Date(ticket.createdAt).toLocaleString('en-US')}</div>\n      <div>{ticket.name}</div>\n      <div className={`status status-${ticket.status}`}>{getStatusText(ticket.status)}</div>\n      {ticket.status === 0 && !ticket.assignedTo ? (\n        <Link to={`/assign-ticket/${ticket._id}`} className='btn btn btn-sm'>Assign Ticket</Link>\n      ) : (\n        <div>{ticket.assignedTo ? ticket.assignedTo.name : 'Unassigned'}</div>\n      )}\n      <button onClick={() => handleChangeStatus(ticket._id)}>Change Status</button>\n\n      <Link to={`/ticket/${ticket._id}`} className='btn btn-reverse btn-sm'>\n        View\n      </Link>\n      \n    </div>\n  )\n}\n\nexport default TicketItem\n"],"mappings":";AAAA,SAASA,IAAI,QAAO,kBAAkB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9C,MAAMC,aAAa,GAAIC,MAAM,IAAK;EAChC,QAAQA,MAAM;IACZ,KAAK,CAAC;MACJ,OAAO,MAAM;IACf,KAAK,CAAC;MACJ,OAAO,aAAa;IACtB,KAAK,CAAC;MACJ,OAAO,QAAQ;IACjB;MACE,OAAO,SAAS;EACpB;AACF,CAAC;AAED,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;AAC9B,MAAMM,kBAAkB,GAAIC,QAAQ,IAAK;EACvCF,QAAQ,CAAC,kBAAkBE,QAAQ,EAAE,CAAC;AACxC,CAAC;AACD,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAE9B,oBACEP,OAAA;IAAKQ,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBT,OAAA;MAAAS,QAAA,EAAM,IAAIC,IAAI,CAACH,MAAM,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/DhB,OAAA;MAAAS,QAAA,EAAMF,MAAM,CAACU;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxBhB,OAAA;MAAKQ,SAAS,EAAE,iBAAiBD,MAAM,CAACL,MAAM,EAAG;MAAAO,QAAA,EAAER,aAAa,CAACM,MAAM,CAACL,MAAM;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrFT,MAAM,CAACL,MAAM,KAAK,CAAC,IAAI,CAACK,MAAM,CAACW,UAAU,gBACxClB,OAAA,CAACH,IAAI;MAACsB,EAAE,EAAE,kBAAkBZ,MAAM,CAACa,GAAG,EAAG;MAACZ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEzFhB,OAAA;MAAAS,QAAA,EAAMF,MAAM,CAACW,UAAU,GAAGX,MAAM,CAACW,UAAU,CAACD,IAAI,GAAG;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACtE,eACDhB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMjB,kBAAkB,CAACG,MAAM,CAACa,GAAG,CAAE;MAAAX,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7EhB,OAAA,CAACH,IAAI;MAACsB,EAAE,EAAE,WAAWZ,MAAM,CAACa,GAAG,EAAG;MAACZ,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAEtE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACM,EAAA,GApBQhB,UAAU;AAsBnB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}