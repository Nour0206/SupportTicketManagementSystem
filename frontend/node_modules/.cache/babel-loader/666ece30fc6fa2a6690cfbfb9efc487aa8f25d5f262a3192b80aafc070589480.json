{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\AssignedTickets.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BackButton } from '../components/BackButton';\nimport Spinner from '../components/Spinner';\nimport TicketItem from '../components/TicketItem';\nimport { getAgentTickets, reset } from '../features/tickets/ticketSlice';\n\n// Helper function to get the status text from the status number\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tickets() {\n  _s();\n  const {\n    tickets,\n    isLoading,\n    isSuccess\n  } = useSelector(state => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    return () => {\n      if (isSuccess) {\n        dispatch(reset());\n      }\n    };\n  }, [dispatch, isSuccess]);\n  useEffect(() => {\n    dispatch(getAgentTickets());\n  }, [dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  tickets = tickets.filter(ticket => ticket.assignedTo === user._id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      url: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Assigned Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-headings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Ticket Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Change status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), tickets.length > 0 ? tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-item\",\n        children: /*#__PURE__*/_jsxDEV(TicketItem, {\n          ticket: ticket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, ticket._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tickets found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Tickets, \"GuTILFm+KGOY4vLX2p9bRI4JfYM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Tickets;\nexport default Tickets;\nvar _c;\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","BackButton","Spinner","TicketItem","getAgentTickets","reset","jsxDEV","_jsxDEV","Fragment","_Fragment","Tickets","_s","tickets","isLoading","isSuccess","state","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","filter","ticket","assignedTo","user","_id","children","url","className","length","map","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/AssignedTickets.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BackButton } from '../components/BackButton';\nimport Spinner from '../components/Spinner';\nimport TicketItem from '../components/TicketItem';\nimport { getAgentTickets, reset } from '../features/tickets/ticketSlice';\n\n// Helper function to get the status text from the status number\nfunction Tickets() {\n  const { tickets, isLoading, isSuccess } = useSelector(\n    (state) => state.tickets\n  )\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    return () => {\n      if (isSuccess) {\n        dispatch(reset())\n      }\n    }\n  }, [dispatch, isSuccess])\n\n  useEffect(() => {\n    dispatch(getAgentTickets())\n  }, [dispatch])\n\n\n  if (isLoading) {\n    return <Spinner />\n  }\n  tickets = tickets.filter((ticket) => ticket.assignedTo === user._id)\n  return (\n    <>\n      <BackButton url=\"/\" />\n      <h1>My Assigned Tickets</h1>\n      <div className=\"tickets\">\n        <div className=\"ticket-headings\">\n          <div>Date</div>\n          <div>Ticket Name</div>\n          <div>Status</div>\n          <div>Change status</div>\n        </div>\n        {tickets.length > 0 ? (\n          tickets.map((ticket) => (\n            <div key={ticket._id} className=\"ticket-item\">\n              <TicketItem ticket={ticket} />\n            </div>\n          ))\n        ) : (\n          <p>No tickets found</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Tickets;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,eAAe,EAAEC,KAAK,QAAQ,iCAAiC;;AAExE;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGd,WAAW,CAClDe,KAAK,IAAKA,KAAK,CAACH,OACnB,CAAC;EACD,MAAMI,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIgB,SAAS,EAAE;QACbE,QAAQ,CAACX,KAAK,CAAC,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,CAACW,QAAQ,EAAEF,SAAS,CAAC,CAAC;EAEzBhB,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACZ,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;EAGd,IAAIH,SAAS,EAAE;IACb,oBAAON,OAAA,CAACL,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EACAR,OAAO,GAAGA,OAAO,CAACS,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,UAAU,KAAKC,IAAI,CAACC,GAAG,CAAC;EACpE,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACN,UAAU;MAAC0B,GAAG,EAAC;IAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBb,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bb,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAF,QAAA,gBACtBnB,OAAA;QAAKqB,SAAS,EAAC,iBAAiB;QAAAF,QAAA,gBAC9BnB,OAAA;UAAAmB,QAAA,EAAK;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACfb,OAAA;UAAAmB,QAAA,EAAK;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBb,OAAA;UAAAmB,QAAA,EAAK;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjBb,OAAA;UAAAmB,QAAA,EAAK;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EACLR,OAAO,CAACiB,MAAM,GAAG,CAAC,GACjBjB,OAAO,CAACkB,GAAG,CAAER,MAAM,iBACjBf,OAAA;QAAsBqB,SAAS,EAAC,aAAa;QAAAF,QAAA,eAC3CnB,OAAA,CAACJ,UAAU;UAACmB,MAAM,EAAEA;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADtBE,MAAM,CAACG,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN,CAAC,gBAEFb,OAAA;QAAAmB,QAAA,EAAG;MAAgB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACT,EAAA,CA9CQD,OAAO;EAAA,QAC4BV,WAAW,EAGpCD,WAAW;AAAA;AAAAgC,EAAA,GAJrBrB,OAAO;AAgDhB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}