{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\ResetPasswordConfirm.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordConfirm() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.put(`/auth/resetPassword/${token}`, {\n        password\n      });\n      toast.success('Password reset successfully');\n      navigate('/login');\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-confirm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter new password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password2\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => setPassword2(e.target.value),\n          placeholder: \"Re-type new password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordConfirm, \"xEfXQg0+g+Pwb3Fc7CYfvzJl+8o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPasswordConfirm;\nexport default ResetPasswordConfirm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"names":["axios","useState","useNavigate","useParams","toast","jsxDEV","_jsxDEV","ResetPasswordConfirm","_s","token","navigate","password","setPassword","password2","setPassword2","onSubmit","e","preventDefault","error","put","success","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/ResetPasswordConfirm.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nfunction ResetPasswordConfirm() {\n  const { token } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.put(`/auth/resetPassword/${token}`, { password });\n      toast.success('Password reset successfully');\n      navigate('/login');\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  return (\n    <div className=\"reset-password-confirm\">\n      <h1>Reset Password</h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter new password\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password2\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => setPassword2(e.target.value)}\n            placeholder=\"Re-type new password\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-block\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ResetPasswordConfirm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}