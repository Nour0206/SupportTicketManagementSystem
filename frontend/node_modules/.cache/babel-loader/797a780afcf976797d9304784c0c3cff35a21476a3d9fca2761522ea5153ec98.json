{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { BackButton } from '../components/BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [statusCounts, setStatusCounts] = useState({\n    open: 0,\n    inProgress: 0,\n    closed: 0\n  });\n  const [totalTickets, setTotalTickets] = useState(0);\n  useEffect(() => {\n    const fetchStatusCounts = async () => {\n      try {\n        const response = await axios.get('/tickets/dashboard/all');\n        setStatusCounts(response.data.statusCounts);\n        setTotalTickets(statusCounts.open + statusCounts.inProgress + statusCounts.closed);\n      } catch (error) {\n        console.error('Error fetching status counts:', error);\n      }\n    };\n    fetchStatusCounts();\n  }, []);\n  const openPercentage = totalTickets ? statusCounts.open / totalTickets * 100 : 0;\n  const inProgressPercentage = totalTickets ? statusCounts.inProgress / totalTickets * 100 : 0;\n  const closedPercentage = totalTickets ? statusCounts.closed / totalTickets * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      url: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          height: '150px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: openPercentage,\n          text: `${Math.round(openPercentage)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            textShadow: '1px 1px 2px #000',\n            marginTop: '10px',\n            color: 'lightblue',\n            border: '1px solid black'\n          },\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          height: '150px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: inProgressPercentage,\n          text: `${Math.round(inProgressPercentage)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            textShadow: '1px 1px 2px #000',\n            marginTop: '10px',\n            color: 'lightblue',\n            border: '1px solid black'\n          },\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          height: '150px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: closedPercentage,\n          text: `${Math.round(closedPercentage)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            textShadow: '1px 1px 2px #000',\n            marginTop: '10px',\n            color: 'lightblue',\n            border: '1px solid black',\n            backgroundColor\n          },\n          children: \"Closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6mkuPim5auVyi0AXcU7++ZbSNmA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","React","useEffect","useState","CircularProgressbar","BackButton","jsxDEV","_jsxDEV","Dashboard","_s","statusCounts","setStatusCounts","open","inProgress","closed","totalTickets","setTotalTickets","fetchStatusCounts","response","get","data","error","console","openPercentage","inProgressPercentage","closedPercentage","children","url","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","width","height","textAlign","value","text","Math","round","fontSize","fontWeight","textShadow","marginTop","color","border","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { BackButton } from '../components/BackButton';\nconst Dashboard = () => {\n  const [statusCounts, setStatusCounts] = useState({ open: 0, inProgress: 0, closed: 0 });\n  const [totalTickets, setTotalTickets] = useState(0);\n\n  useEffect(() => {\n    const fetchStatusCounts = async () => {\n      try {\n        const response = await axios.get('/tickets/dashboard/all');\n        setStatusCounts(response.data.statusCounts);\n        setTotalTickets(statusCounts.open+statusCounts.inProgress+statusCounts.closed);\n      } catch (error) {\n        console.error('Error fetching status counts:', error);\n      }\n    };\n\n    fetchStatusCounts();\n  }, []);\n\n  const openPercentage = totalTickets ? (statusCounts.open / totalTickets) * 100 : 0;\n  const inProgressPercentage = totalTickets ? (statusCounts.inProgress / totalTickets) * 100 : 0;\n  const closedPercentage = totalTickets ? (statusCounts.closed / totalTickets) * 100 : 0;\n\n  return (\n    <div>\n      <BackButton url=\"/\" />\n      <h1>Admin Dashboard</h1>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <div style={{ width: '150px', height: '150px', textAlign: 'center' }}>\n          <CircularProgressbar value={openPercentage} text={`${Math.round(openPercentage)}%`} />\n          <p style={{ fontSize: '18px', fontWeight: 'bold', textShadow: '1px 1px 2px #000', marginTop: '10px', color: 'lightblue', border: '1px solid black' }}>Open</p>\n        </div>\n        <div style={{ width: '150px', height: '150px', textAlign: 'center' }}>\n          <CircularProgressbar value={inProgressPercentage} text={`${Math.round(inProgressPercentage)}%`} />\n          <p style={{ fontSize: '18px', fontWeight: 'bold', textShadow: '1px 1px 2px #000', marginTop: '10px', color: 'lightblue', border: '1px solid black' }}>In Progress</p>\n        </div>\n        <div style={{ width: '150px', height: '150px', textAlign: 'center' }}>\n          <CircularProgressbar value={closedPercentage} text={`${Math.round(closedPercentage)}%`} />\n          <p style={{ fontSize: '18px', fontWeight: 'bold', textShadow: '1px 1px 2px #000', marginTop: '10px', color: 'lightblue', border: '1px solid black',backgroundColor }}>Closed</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}