{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport authService, { VerifyEmail as verifyEmailService } from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// register new user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\n\n// get users\nexport const getUsers = createAsyncThunk('auth/getUsers', async (_, thunkAPI) => {\n  try {\n    return await authService.getUsers();\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// delete user\nexport const deleteUser = createAsyncThunk('auth/deleteUser', async (userId, thunkAPI) => {\n  try {\n    return await authService.deleteUser(userId);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// verify email\nexport const verifyEmail = createAsyncThunk('auth/verify', async (userId, thunkAPI) => {\n  console.log(userId);\n  try {\n    return await verifyEmailService(userId);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = null;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    }).addCase(getUsers.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.users = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(deleteUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.users = state.users.filter(user => user._id !== action.payload._id);\n    }).addCase(deleteUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(verifyEmail.pending, state => {\n      state.isLoading = true;\n    }).addCase(verifyEmail.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = null;\n    }).addCase(verifyEmail.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","authService","VerifyEmail","verifyEmailService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","err","response","data","toString","rejectWithValue","login","logout","getUsers","_","deleteUser","userId","verifyEmail","console","log","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","rejected","payload","users","filter","_id","actions","reducer"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport authService, { VerifyEmail as verifyEmailService } from './authService'\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// register new user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user)\n    } catch (err) {\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user)\n  } catch (err) {\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\n// logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout()\n})\n\n// get users\nexport const getUsers = createAsyncThunk('auth/getUsers', async (_, thunkAPI) => {\n  try {\n    return await authService.getUsers()\n  } catch (err) {\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\n// delete user\nexport const deleteUser = createAsyncThunk('auth/deleteUser', async (userId, thunkAPI) => {\n  try {\n    return await authService.deleteUser(userId)\n  } catch (err) {\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\n// verify email\nexport const verifyEmail = createAsyncThunk('auth/verify', async (userId, thunkAPI) => {\n  console.log(userId)\n  try {\n    return await verifyEmailService(userId)\n  } catch (err) {\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false\n      state.isError = false\n      state.isSuccess = false\n      state.message = ''\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = null\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null\n      })\n      .addCase(getUsers.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.users = action.payload\n      })\n      .addCase(getUsers.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteUser.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteUser.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.users = state.users.filter(user => user._id !== action.payload._id)\n      })\n      .addCase(deleteUser.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(verifyEmail.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(verifyEmail.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = null\n      })\n      .addCase(verifyEmail.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = null\n      })\n  },\n})\n\nexport const { reset } = authSlice.actions\nexport default authSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}