{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\Tickets.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getTickets, reset } from '../features/tickets/ticketSlice';\nimport Spinner from '../components/Spinner';\nimport { BackButton } from '../components/BackButton';\nimport TicketItem from '../components/TicketItem';\n\n// Helper function to get the status text from the status number\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getStatusText = status => {\n  switch (status) {\n    case 0:\n      return 'Open';\n    case 1:\n      return 'In Progress';\n    case 2:\n      return 'Closed';\n    default:\n      return 'Unknown';\n    // In case of unexpected status value\n  }\n};\nfunction Tickets() {\n  _s();\n  const {\n    tickets,\n    isLoading,\n    isSuccess,\n    message,\n    isError\n  } = useSelector(state => state.tickets);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isError) {\n      // Handle error (e.g., toast error message)\n      console.error(message);\n    }\n    if (isSuccess) {\n      dispatch(reset()); // Reset the tickets state if successful\n    }\n    return () => {\n      dispatch(reset()); // Cleanup when component unmounts\n    };\n  }, [dispatch, isSuccess, isError, message]);\n  useEffect(() => {\n    dispatch(getTickets()); // Fetch tickets on component mount\n  }, [dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this); // Show spinner while loading tickets\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      url: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-headings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Ticket Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), tickets.length > 0 ? tickets.map(ticket => /*#__PURE__*/_jsxDEV(TicketItem, {\n        ticket: ticket\n      }, ticket._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tickets found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Tickets, \"8Q6ejtpxPaiMJ88Ng90t5N+yj6Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Tickets;\nexport default Tickets;\nvar _c;\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","getTickets","reset","Spinner","BackButton","TicketItem","jsxDEV","_jsxDEV","Fragment","_Fragment","getStatusText","status","Tickets","_s","tickets","isLoading","isSuccess","message","isError","state","dispatch","console","error","fileName","_jsxFileName","lineNumber","columnNumber","children","url","className","length","map","ticket","_id","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/Tickets.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getTickets, reset } from '../features/tickets/ticketSlice';\nimport Spinner from '../components/Spinner';\nimport { BackButton } from '../components/BackButton';\nimport TicketItem from '../components/TicketItem';\n\n// Helper function to get the status text from the status number\nconst getStatusText = (status) => {\n  switch (status) {\n    case 0:\n      return 'Open';\n    case 1:\n      return 'In Progress';\n    case 2:\n      return 'Closed';\n    default:\n      return 'Unknown'; // In case of unexpected status value\n  }\n};\n\nfunction Tickets() {\n  const { tickets, isLoading, isSuccess, message, isError } = useSelector(\n    (state) => state.tickets\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isError) {\n      // Handle error (e.g., toast error message)\n      console.error(message);\n    }\n    if (isSuccess) {\n      dispatch(reset()); // Reset the tickets state if successful\n    }\n\n    return () => {\n      dispatch(reset()); // Cleanup when component unmounts\n    };\n  }, [dispatch, isSuccess, isError, message]);\n\n  useEffect(() => {\n    dispatch(getTickets()); // Fetch tickets on component mount\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Spinner />; // Show spinner while loading tickets\n  }\n\n  return (\n    <>\n      <BackButton url=\"/\" />\n      <h1>Tickets</h1>\n      <div className=\"tickets\">\n        <div className=\"ticket-headings\">\n          <div>Date</div>\n          <div>Ticket Name</div>\n          <div>Status</div>\n          <div></div>\n        </div>\n        {tickets.length > 0 ? (\n          tickets.map((ticket) => (\n            <TicketItem key={ticket._id} ticket={ticket} />\n          ))\n        ) : (\n          <p>No tickets found</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Tickets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}