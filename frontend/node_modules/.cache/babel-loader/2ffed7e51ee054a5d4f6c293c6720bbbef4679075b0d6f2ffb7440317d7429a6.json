{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\Ticket.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { BackButton } from '../components/BackButton';\nimport Spinner from '../components/Spinner';\nimport { getTicket } from '../features/tickets/ticketSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStatusText = status => {\n  switch (status) {\n    case 0:\n      return 'Open';\n    case 1:\n      return 'In Progress';\n    case 2:\n      return 'Closed';\n    default:\n      return 'Unknown';\n  }\n};\nModal.setAppElement('#root');\nfunction Ticket() {\n  _s();\n  const {\n    ticket,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.tickets);\n  const {\n    user\n  } = useSelector(state => state.auth); // Get user from state\n\n  const {\n    id: ticketId\n  } = useParams(); // Ensure ticketId is correctly retrieved\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n    if (ticketId) {\n      dispatch(getTicket(ticketId));\n    }\n  }, [isError, message, ticketId, dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  const getBackButtonUrl = () => {\n    if (user.role === 'admin') return '/tickets';\n    if (user.role === 'agent') return '/ticketsAgent';\n    return '/ticketsUser';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-page\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ticket-header\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        url: getBackButtonUrl()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ticket Name: \", ticket.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status status-${ticket.status}`,\n          children: getStatusText(ticket.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Date submitted: \", new Date(ticket.createdAt).toLocaleString('en-US')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Ticket ID: \", ticket._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description of issue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ticket.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Ticket, \"QS1UKuQSQ46tLERePB64YDswoRM=\", false, function () {\n  return [useSelector, useSelector, useParams, useDispatch];\n});\n_c = Ticket;\nexport default Ticket;\nvar _c;\n$RefreshReg$(_c, \"Ticket\");","map":{"version":3,"names":["useEffect","Modal","useDispatch","useSelector","useParams","toast","BackButton","Spinner","getTicket","jsxDEV","_jsxDEV","getStatusText","status","setAppElement","Ticket","_s","ticket","isLoading","isError","message","state","tickets","user","auth","id","ticketId","dispatch","error","fileName","_jsxFileName","lineNumber","columnNumber","children","getBackButtonUrl","role","className","url","name","Date","createdAt","toLocaleString","_id","content","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/Ticket.jsx"],"sourcesContent":["import { useEffect } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { BackButton } from '../components/BackButton'\nimport Spinner from '../components/Spinner'\nimport { getTicket } from '../features/tickets/ticketSlice'\n\nconst getStatusText = (status) => {\n  switch (status) {\n    case 0:\n      return 'Open'\n    case 1:\n      return 'In Progress'\n    case 2:\n      return 'Closed'\n    default:\n      return 'Unknown'\n  }\n}\nModal.setAppElement('#root')\n\nfunction Ticket() {\n  const { ticket, isLoading, isError, message } = useSelector(\n    (state) => state.tickets\n  )\n  const { user } = useSelector((state) => state.auth) // Get user from state\n\n  const { id: ticketId } = useParams() // Ensure ticketId is correctly retrieved\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(message)\n    }\n    if (ticketId) {\n      dispatch(getTicket(ticketId))\n    }\n  }, [isError, message, ticketId, dispatch])\n\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  if (isError) {\n    return <h3>Something went wrong</h3>\n  }\n\n  const getBackButtonUrl = () => {\n    if (user.role === 'admin') return '/tickets'\n    if (user.role === 'agent') return '/ticketsAgent'\n    return '/ticketsUser'\n  }\n\n  return (\n    <div className='ticket-page'>\n      <header className='ticket-header'>\n        <BackButton url={getBackButtonUrl()} />\n        <h2>\n          Ticket Name: {ticket.name}\n          <span className={`status status-${ticket.status}`}>\n            {getStatusText(ticket.status)}\n          </span>{' '}\n        </h2>\n        <h3>\n          Date submitted: {new Date(ticket.createdAt).toLocaleString('en-US')}\n        </h3>\n        <h3>Ticket ID: {ticket._id}</h3>\n        <hr />\n        <div className='ticket-desc'>\n          <h3>Description of issue</h3>\n          <p>{ticket.content}</p>\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default Ticket\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}