{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n// register new user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n    // const data = await authService.register(user)\n    // console.log('from slice',data)\n  } catch (err) {\n    console.log(err);\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n// login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n    // const data = await authService.register(user)\n    // console.log('from slice',data)\n  } catch (err) {\n    console.log(err);\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n// logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\n\n// get users\nexport const getUsers = createAsyncThunk('users/getUsers', async (_, thunkAPI) => {\n  try {\n    return await authService.getUsers();\n  } catch (err) {\n    console.log(err);\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    }).addCase(getUsers.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.users = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","err","console","log","response","data","toString","rejectWithValue","login","logout","getUsers","_","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","users","actions","reducer"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n// register new user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user)\n      // const data = await authService.register(user)\n      // console.log('from slice',data)\n    } catch (err) {\n      console.log(err)\n      const message =\n        (err.response && err.response.data && err.response.data.message) ||\n        err.message ||\n        err.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n// login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user)\n    // const data = await authService.register(user)\n    // console.log('from slice',data)\n  } catch (err) {\n    console.log(err)\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n// logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout()\n})\n\n// get users\nexport const getUsers = createAsyncThunk('users/getUsers', async (_, thunkAPI) => {\n  try {\n    return await authService.getUsers()\n  } catch (err) {\n    console.log(err)\n    const message =\n      (err.response && err.response.data && err.response.data.message) ||\n      err.message ||\n      err.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false\n      state.isError = false\n      state.isSuccess = false\n      state.message = ''\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null\n      })\n      .addCase(getUsers.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.users = action.payload\n      })\n      .addCase(getUsers.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = authSlice.actions\nexport default authSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}