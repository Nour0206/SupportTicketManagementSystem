{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmo\\\\Downloads\\\\SupportTicketManagementSystem\\\\frontend\\\\src\\\\pages\\\\AssignTicket.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignTicket = () => {\n  _s();\n  const {\n    ticketId\n  } = useParams();\n  const navigate = useNavigate();\n  const [agents, setAgents] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState('');\n  useEffect(() => {\n    // Fetch the list of agents\n    const fetchAgents = async () => {\n      try {\n        const response = await axios.get('/users/role/agent');\n        setAgents(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchAgents();\n  }, []);\n  const handleAssign = async () => {\n    try {\n      con;\n      await axios.put(`/tickets/${ticketId}/assign`, {\n        assignedTo: selectedAgent\n      });\n      navigate('/tickets');\n    } catch (error) {\n      console.error('Error assigning ticket:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assign-ticket-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Assign Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"agent\",\n        children: \"Select Agent:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"agent\",\n        value: selectedAgent,\n        onChange: e => setSelectedAgent(e.target.value),\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), agents.map(agent => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: agent._id,\n          children: agent.name\n        }, agent._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAssign,\n      className: \"btn btn-primary\",\n      children: \"Assign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignTicket, \"lkx3dvU+cz7oGWea1SkOlaNll/E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AssignTicket;\nexport default AssignTicket;\nvar _c;\n$RefreshReg$(_c, \"AssignTicket\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","AssignTicket","_s","ticketId","navigate","agents","setAgents","selectedAgent","setSelectedAgent","fetchAgents","response","get","data","error","console","handleAssign","con","put","assignedTo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","agent","_id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/pages/AssignTicket.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst AssignTicket = () => {\n  const { ticketId } = useParams();\n  const navigate = useNavigate();\n  const [agents, setAgents] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of agents\n    const fetchAgents = async () => {\n      try {\n        const response = await axios.get('/users/role/agent');\n        setAgents(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n\n    fetchAgents();\n  }, []);\n\n  const handleAssign = async () => {\n    try {\n      con\n      await axios.put(`/tickets/${ticketId}/assign`, { assignedTo: selectedAgent });\n      navigate('/tickets');\n    } catch (error) {\n      console.error('Error assigning ticket:', error);\n    }\n  };\n\n  return (\n    <div className=\"assign-ticket-container\">\n      <h1 className=\"heading\">Assign Ticket</h1>\n      <div className=\"form-group\">\n        <label htmlFor=\"agent\">Select Agent:</label>\n        <select\n          id=\"agent\"\n          value={selectedAgent}\n          onChange={(e) => setSelectedAgent(e.target.value)}\n          className=\"form-control\"\n        >\n          <option value=\"\">Select an agent</option>\n          {agents.map((agent) => (\n            <option key={agent._id} value={agent._id}>\n              {agent.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button onClick={handleAssign} className=\"btn btn-primary\">Assign</button>\n    </div>\n  );\n};\n\nexport default AssignTicket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}