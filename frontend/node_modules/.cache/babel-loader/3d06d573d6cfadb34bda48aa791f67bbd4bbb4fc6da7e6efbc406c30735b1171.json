{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nexport const useAuthStatus = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingStatus, setCheckingStatus] = useState(true);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n    setCheckingStatus(false);\n  }, [user]);\n  return {\n    loggedIn,\n    checkingStatus\n  };\n};\n_s(useAuthStatus, \"GvyLOpeAQPosHbIyqPBjAsJTuHA=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useState","useEffect","useSelector","useAuthStatus","_s","loggedIn","setLoggedIn","checkingStatus","setCheckingStatus","user","state","auth"],"sources":["C:/Users/benmo/Downloads/SupportTicketManagementSystem/frontend/src/hooks/useAuthStatus.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const useAuthStatus = () => {\n    \n  const [loggedIn, setLoggedIn] = useState(false)\n  const [checkingStatus, setCheckingStatus] = useState(true)\n\n  const { user } = useSelector((state) => state.auth)\n\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true)\n    } else {\n      setLoggedIn(false)\n    }\n    setCheckingStatus(false)\n  }, [user])\n\n  return { loggedIn, checkingStatus }\n\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM;IAAES;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEnDV,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACRH,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLA,WAAW,CAAC,KAAK,CAAC;IACpB;IACAE,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEJ,QAAQ;IAAEE;EAAe,CAAC;AAErC,CAAC;AAAAH,EAAA,CAlBYD,aAAa;EAAA,QAKPD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}